import tweepy
from configparser import SafeConfigParser
import logging

# TODO: write functions to generate spot tweets based on adsbexchange api data
# TODO: write functions to pull supplementary information (registration, photos) for spots and add in tweet replies

logging.basicConfig(level=logging.DEBUG)

def initialize_twitter_api(ckey, csec, atkn, asec):
    # Authenticate to Twitter
    auth = tweepy.OAuthHandler(ckey, csec)
    auth.set_access_token(atkn, asec)
    # Create API object
    api = tweepy.API(auth, wait_on_rate_limit=True, wait_on_rate_limit_notify=True)
    try:
        # test that authentication worked
        api.verify_credentials()
        logging.info("Authentication OK")
    except tweepy.error.TweepError as e:
        logging.critical(f'Error during Twitter API authentication')
        raise e
    logging.info('Twitter API created')
    return api


def read_config_file(path: str):
    # TODO: function for reading and storing variables/keys from asb.config
    parser = SafeConfigParser()
    parser.read(path)
    pass


def tweet_spot(type_code: str, reg_num:str, location: str, description=None):
    # TODO: function to tweet out aircraft spots
    pass


def photo_reply(tweet, reg_num):
    # TODO: function to reply to a tweet generated by tweet_spot with a link to jetphotos.com
    pass


def link_reply


if __name__ == "__main__":
        twapi = initialize_twitter_api("CONSUMER_KEY", "CONSUMER_SECRET", "ACCESS_TOKEN", "ACCESS_TOKEN_SECRET")
        # Create a tweet
        twapi.update_status("Hello Tweepy")
